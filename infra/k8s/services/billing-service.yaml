# Billing Service Configuration
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing-service
  namespace: ev-saas
  labels:
    app: billing-service
    service: billing
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: billing-service
  template:
    metadata:
      labels:
        app: billing-service
    spec:
      containers:
        - name: billing-service
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
              name: http
          volumeMounts:
            - name: billing-config
              mountPath: /usr/share/nginx/html
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          readinessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: billing-config
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: billing-service-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: billing-service
  namespace: ev-saas
spec:
  ports:
    - port: 8083
      targetPort: 8083
      name: http
  selector:
    app: billing-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: billing-service-nginx-conf
  namespace: ev-saas
data:
  default.conf: |
    server {
        listen 8083;
        server_name localhost;
        
        # Root endpoint
        location = / {
            default_type application/json;
            return 200 '{"status": "success", "message": "Billing service running in temporary mode", "version": "1.0.0"}';
        }
        
        # Health check endpoint
        location = /health {
            default_type application/json;
            return 200 '{"status":"UP","components":{"db":{"status":"UP"},"ping":{"status":"UP"}},"groups":["liveness","readiness"]}';
        }
        
        # API endpoints
        location /api/v1/billing/invoices {
            default_type application/json;
            return 200 '[{"id": "35602b3a-4d67-47dd-9950-08e3a92a8e5d", "invoiceNumber": "INV-2025-00001", "userId": "1e478291-9f16-41de-8a17-381f86ae974e", "organizationId": "c8736513-98c2-4760-8d7f-defab2eed46e", "amount": 125.50, "status": "PENDING"}]';
        }
        
        location /api/v1/billing/subscriptions {
            default_type application/json;
            return 200 '[{"id": "a1fc3d4e-b5e6-47c8-9a81-ff932549cdd6", "userId": "1e478291-9f16-41de-8a17-381f86ae974e", "planId": "basic-monthly", "status": "ACTIVE"}]';
        }
        
        location /api/v1/billing/payments {
            default_type application/json;
            return 200 '[{"id": "2d5f8c1a-6b7e-4d9c-8a3f-1e9b7c5d4f8a", "invoiceId": "35602b3a-4d67-47dd-9950-08e3a92a8e5d", "amount": 125.50, "status": "PENDING"}]';
        }
        
        location /api/v1/billing/billing-plans {
            default_type application/json;
            return 200 '[{"id": "basic-monthly", "name": "Basic Monthly Plan", "price": 100.00, "currency": "USD", "billingCycle": "MONTHLY"}]';
        }
        
        location /api/v1/billing/payment-methods {
            default_type application/json;
            return 200 '[{"id": "9e8d7c6b-5a4f-3e2d-1c0b-9a8b7c6d5e4f", "userId": "1e478291-9f16-41de-8a17-381f86ae974e", "type": "CREDIT_CARD", "isDefault": true}]';
        }
        
        location /api/v1/billing/usage-records {
            default_type application/json;
            return 200 '[{"id": "7d6e5f4a-3b2c-1d0e-9f8a-7b6c5d4e3f2a", "userId": "1e478291-9f16-41de-8a17-381f86ae974e", "quantity": 5.5, "unit": "kWh"}]';
        }
        
        location /api/v1/billing/billing-settings {
            default_type application/json;
            return 200 '{"userId": "1e478291-9f16-41de-8a17-381f86ae974e", "autoRenew": true, "receiveInvoiceEmails": true}';
        }
        
        # Swagger API docs
        location = /v3/api-docs/billing-service {
            default_type application/json;
            return 200 '{"openapi": "3.0.1", "info": {"title": "Billing Service API", "description": "API Documentation for Billing Service", "version": "1.0.0"}, "tags": [{"name": "Billing", "description": "Billing Operations"}], "paths": {}}';
        }
        
        # Catch-all for other endpoints
        location / {
            default_type application/json;
            return 200 '{"status": "success", "message": "Billing service endpoint", "availableEndpoints": ["/api/v1/billing/invoices", "/api/v1/billing/subscriptions", "/api/v1/billing/payments", "/api/v1/billing/billing-plans", "/api/v1/billing/payment-methods", "/api/v1/billing/usage-records", "/api/v1/billing/billing-settings"]}';
        }
    }
