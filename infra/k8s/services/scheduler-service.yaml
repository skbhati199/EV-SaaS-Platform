# Scheduler Service Configuration
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler-service
  namespace: ev-saas
  labels:
    app: scheduler-service
    service: scheduler
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scheduler-service
  template:
    metadata:
      labels:
        app: scheduler-service
    spec:
      containers:
        - name: scheduler-service
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8085
              name: http
          volumeMounts:
            - name: scheduler-config
              mountPath: /usr/share/nginx/html
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8085
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8085
            initialDelaySeconds: 20
            periodSeconds: 15
      volumes:
        - name: scheduler-config
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: scheduler-service-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: scheduler-service
  namespace: ev-saas
spec:
  ports:
    - port: 8085
      targetPort: 8085
      name: http
  selector:
    app: scheduler-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scheduler-service-nginx-conf
  namespace: ev-saas
data:
  default.conf: |
    server {
        listen 8085;
        server_name localhost;
        
        # Root endpoint
        location / {
            default_type application/json;
            return 200 '{"status": "success", "message": "Scheduler service running in temporary mode", "version": "1.0.0"}';
        }
        
        # Health check endpoint
        location /actuator/health {
            default_type application/json;
            return 200 '{"status":"UP","components":{"db":{"status":"UP"},"diskSpace":{"status":"UP"},"ping":{"status":"UP"}},"groups":["liveness","readiness"]}';
        }
        
        # API endpoints
        location /api/v1/schedules {
            default_type application/json;
            return 200 '[{"id": "7d8e9f0a-1b2c-3d4e-5f6a-7b8c9d0e1f2a", "name": "Daily Maintenance Check", "type": "STATION_MAINTENANCE", "cronExpression": "0 0 2 * * ?", "status": "ACTIVE", "targetIds": ["fc5a81b3-4dad-4c7e-b8f3-0c9c2746be22"]}]';
        }
        
        location /api/v1/schedules/jobs {
            default_type application/json;
            return 200 '[{"id": "job-001", "scheduleId": "7d8e9f0a-1b2c-3d4e-5f6a-7b8c9d0e1f2a", "status": "COMPLETED", "startTime": "2025-05-09T02:00:00Z", "endTime": "2025-05-09T02:05:23Z", "result": "SUCCESS"}]';
        }
        
        location /api/v1/schedules/types {
            default_type application/json;
            return 200 '["STATION_MAINTENANCE", "TARIFF_UPDATE", "REPORT_GENERATION", "DATA_CLEANUP"]';
        }
        
        # Swagger API docs
        location = /v3/api-docs/scheduler-service {
            default_type application/json;
            return 200 '{"openapi": "3.0.1", "info": {"title": "Scheduler Service API", "description": "API Documentation for Scheduler Service", "version": "1.0.0"}, "tags": [{"name": "Schedules", "description": "Scheduling Operations"}], "paths": {}}';
        }
    }
