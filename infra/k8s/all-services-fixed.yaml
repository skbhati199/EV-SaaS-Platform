# Combined Kubernetes configuration for all EV SaaS Platform services
---
# API Gateway Service (from api-gateway-fixed.yaml)
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: ev-saas
  labels:
    app: api-gateway
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: api-gateway
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ev-saas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ev-saas-platform-api-gateway:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: SPRING_REDIS_HOST
          value: "redis-service"
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: JWT_SECRET
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Auth Service (from auth-service-fixed.yaml)
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: ev-saas
  labels:
    app: auth-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: auth-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: ev-saas-platform-auth-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: JWT_SECRET
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Other Services (from service-deployments-fixed.yaml)
# Station Service
apiVersion: v1
kind: Service
metadata:
  name: station-service
  namespace: ev-saas
  labels:
    app: station-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  - port: 8887
    targetPort: 8887
    name: ocpp
  selector:
    app: station-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: station-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: station-service
  template:
    metadata:
      labels:
        app: station-service
    spec:
      containers:
      - name: station-service
        image: ev-saas-platform-station-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8887
          name: ocpp
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: SMART_CHARGING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SMART_CHARGING_SERVICE_URL
        - name: NOTIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: NOTIFICATION_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Smart Charging Service
apiVersion: v1
kind: Service
metadata:
  name: smart-charging-service
  namespace: ev-saas
  labels:
    app: smart-charging
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: smart-charging
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smart-charging
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: smart-charging
  template:
    metadata:
      labels:
        app: smart-charging
    spec:
      containers:
      - name: smart-charging
        image: ev-saas-platform-smart-charging:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: STATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: STATION_SERVICE_URL
        - name: SCHEDULER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SCHEDULER_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Notification Service
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: ev-saas
  labels:
    app: notification-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: notification-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: ev-saas-platform-notification-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: USER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: USER_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Roaming Service
apiVersion: v1
kind: Service
metadata:
  name: roaming-service
  namespace: ev-saas
  labels:
    app: roaming-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: roaming-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: roaming-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: roaming-service
  template:
    metadata:
      labels:
        app: roaming-service
    spec:
      containers:
      - name: roaming-service
        image: ev-saas-platform-roaming-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: OCPI_EXTERNAL_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: OCPI_EXTERNAL_URL
        - name: STATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: STATION_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Scheduler Service
apiVersion: v1
kind: Service
metadata:
  name: scheduler-service
  namespace: ev-saas
  labels:
    app: scheduler-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: scheduler-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: scheduler-service
  template:
    metadata:
      labels:
        app: scheduler-service
    spec:
      containers:
      - name: scheduler-service
        image: ev-saas-platform-scheduler-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: STATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: STATION_SERVICE_URL
        - name: SMART_CHARGING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SMART_CHARGING_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# User Service
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: ev-saas
  labels:
    app: user-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: user-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: ev-saas-platform-user-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: AUTH_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Billing Service
apiVersion: v1
kind: Service
metadata:
  name: billing-service
  namespace: ev-saas
  labels:
    app: billing-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: billing-service
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billing-service
  namespace: ev-saas
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: billing-service
  template:
    metadata:
      labels:
        app: billing-service
    spec:
      containers:
      - name: billing-service
        image: ev-saas-platform-billing-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres-service:5432/evsaas_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ev-saas-secrets
              key: DATABASE_PASSWORD
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://eureka-service:8761/eureka"
        - name: USER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: USER_SERVICE_URL
        - name: STATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: ev-saas-config
              key: STATION_SERVICE_URL
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Ingress Configuration for API Gateway
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: ev-saas
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  tls:
  - hosts:
    - api.ev-saas.com
    - ocpi.ev-saas.com
    secretName: ev-saas-tls
  rules:
  - host: api.ev-saas.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8080
  - host: ocpi.ev-saas.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: roaming-service
            port:
              number: 8080