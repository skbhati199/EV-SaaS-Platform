# NGINX API Gateway Configuration
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: ingress-local
data:
  nginx.conf: |
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    events {
      worker_connections 1024;
    }
    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      
      # Increase timeouts for slower services
      proxy_connect_timeout 60s;
      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
      
      server {
        listen 80;
        server_name localhost;
        
        # Service routes
        location /auth/ {
          proxy_pass http://auth-service.ev-saas.svc.cluster.local:8080/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /notifications/ {
          proxy_pass http://notification-service.ev-saas.svc.cluster.local:8087/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /roaming/ {
          proxy_pass http://roaming-service.ev-saas.svc.cluster.local:8088/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /billing/ {
          proxy_pass http://billing-service.ev-saas.svc.cluster.local:8083/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_read_timeout 60s;
        }

        location /stations/ {
          proxy_pass http://station-service.ev-saas.svc.cluster.local:8084/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /scheduler/ {
          proxy_pass http://scheduler-service.ev-saas.svc.cluster.local:8085/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /smart-charging/ {
          proxy_pass http://smart-charging-service.ev-saas.svc.cluster.local:8086/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }

        location /users/ {
          proxy_pass http://user-service.ev-saas.svc.cluster.local:8082/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /eureka/ {
          proxy_pass http://eureka-server.ev-saas.svc.cluster.local:8761/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Swagger UI route
        location /swagger/ {
          proxy_pass http://swagger-ui.ev-saas.svc.cluster.local:8080/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Health check endpoint
        location /health {
          return 200 '{"status":"UP","services":[{"name":"api-gateway","status":"UP"}]}';
          add_header Content-Type application/json;
        }

        # Root endpoint with service list
        location = / {
          return 200 'EV SaaS Platform API Gateway\n\nAvailable services:\n- /auth/\n- /notifications/\n- /roaming/\n- /billing/\n- /stations/\n- /scheduler/\n- /smart-charging/\n- /users/\n- /eureka/\n- /swagger/ (API Documentation)\n- /health';
          add_header Content-Type text/plain;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-gateway
  namespace: ingress-local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-gateway
  template:
    metadata:
      labels:
        app: nginx-gateway
    spec:
      containers:
      - name: nginx
        image: nginx:1.21-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-gateway
  namespace: ingress-local
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
  selector:
    app: nginx-gateway
