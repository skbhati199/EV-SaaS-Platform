# Application Configuration
spring.application.name=billing-service
server.port=8083
spring.profiles.active=docker
# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/evsaas_db
spring.datasource.username=evsaas
spring.datasource.password=evsaas_password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# TimescaleDB Configuration
billing.timescale.datasource.url=jdbc:postgresql://timescaledb:5432/evsaas_timeseries_db
billing.timescale.datasource.username=evsaas
billing.timescale.datasource.password=evsaas_password

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging
logging.level.com.ev.billingservice=INFO
logging.level.org.springframework=INFO

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/auth/realms/ev-platform
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/auth/realms/ev-platform/protocol/openid-connect/certs 
# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:4200
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=Authorization,Content-Type,X-Requested-With
app.cors.max-age=3600

# API Gateway Route
spring.cloud.gateway.routes[0].id=billing-service
spring.cloud.gateway.routes[0].uri=lb://billing-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/billing/**

# External Services
notification.service.url=http://notification-service:8087
user.service.url=http://user-service:8082

# OpenAPI Documentation Configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.display-request-duration=true
springdoc.packages-to-scan=com.ev.billingservice.controller
springdoc.swagger-ui.display-operation-id=false
springdoc.paths-to-match=/api/v1/**
springdoc.group-configs[0].group=billing-service
springdoc.group-configs[0].paths-to-match=/api/v1/**

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=billing-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ev.station.dto,com.ev.billingservice.dto
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.ev.billingservice.dto.event.ChargingSessionEvent

# Kafka Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.enable.idempotence=true

# Kafka Listener Configuration
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
spring.kafka.listener.concurrency=3
spring.kafka.listener.missing-topics-fatal=false

# For local development, you may want to disable Kafka
# Uncomment this line to disable Kafka in local development
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
