spring.application.name=notification-service
server.port=8087
spring.profiles.active=docker

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/evsaas_db
spring.datasource.username=evsaas
spring.datasource.password=evsaas_password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreply@nbevc.com
spring.mail.password=password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
notification.email.enabled=false

# Service Discovery (Eureka)
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Notification Service Configuration
notification.send.interval=30000

# Actuator
management.endpoints.web.exposure.include=health,info,metrics

# Logging
logging.level.com.ev.notificationservice=INFO
logging.level.org.springframework=INFO

# API Gateway Route (optional)
spring.cloud.gateway.routes[0].id=notification-service
spring.cloud.gateway.routes[0].uri=lb://notification-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/notifications/**

# JPA/Hibernate Properties
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Notification Configuration
notification.sms.enabled=false
notification.push.enabled=false

# Kafka Configuration - ENABLED
spring.kafka.bootstrap-servers=kafka:9092

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ev.notificationservice.dto,com.ev.station.dto.event,com.ev.billingservice.dto.event
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Kafka Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.enable.idempotence=true

# Kafka Listener Configuration
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
spring.kafka.listener.concurrency=3
spring.kafka.listener.missing-topics-fatal=false

# Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/ev-platform
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/ev-platform/protocol/openid-connect/certs

# OpenAPI Documentation Configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.display-request-duration=true
springdoc.packages-to-scan=com.ev.notificationservice.controller
springdoc.swagger-ui.display-operation-id=false
springdoc.paths-to-match=/api/v1/**
springdoc.group-configs[0].group=notification-service
springdoc.group-configs[0].paths-to-match=/api/v1/**
