spring.application.name=notification-service
server.port=8087
spring.profiles.active=docker

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/evsaas_db
spring.datasource.username=evsaas
spring.datasource.password=evsaas_password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Service Discovery (Eureka)
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Kafka
spring.kafka.bootstrap-servers=kafka:9092

# Actuator
management.endpoints.web.exposure.include=health,info,metrics

# Logging
logging.level.com.ev.notificationservice=INFO
logging.level.org.springframework=INFO

# API Gateway Route (optional)
spring.cloud.gateway.routes[0].id=notification-service
spring.cloud.gateway.routes[0].uri=lb://notification-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/notifications/**

# JPA/Hibernate Properties
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Notification Configuration
notification.send.interval=30000
notification.sms.enabled=false
notification.push.enabled=false

# Kafka Configuration
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ev.notificationservice.dto

# Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/ev-platform
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/ev-platform/protocol/openid-connect/certs
