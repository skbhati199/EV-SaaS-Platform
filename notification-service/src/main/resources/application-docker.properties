spring.application.name=notification-service
server.port=8087

# Database Configuration (use container name to connect to Docker container)
spring.datasource.url=jdbc:postgresql://postgres:5432/notification_db
spring.datasource.username=notification
spring.datasource.password=notification
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Email Configuration (disabled for docker development)
notification.email.enabled=false
notification.sms.enabled=false
notification.push.enabled=false
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreply@nbevc.com
spring.mail.password=password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Service Discovery (Eureka) - disabled for docker deployment
spring.cloud.discovery.enabled=false
eureka.client.enabled=false
spring.cloud.compatibility-verifier.enabled=false

# Kafka Configuration - ENABLED
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ev.notificationservice.dto,com.ev.station.dto.event,com.ev.billingservice.dto.event
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.listener.missing-topics-fatal=false

# Kafka Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.enable.idempotence=true

# Actuator
management.endpoints.web.exposure.include=health,info,metrics

# Logging
logging.level.com.ev.notificationservice=INFO
logging.level.org.springframework=INFO

# Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/ev-platform
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/ev-platform/protocol/openid-connect/certs 