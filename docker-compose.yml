version: '3.8'

services:
  ## Databases
  # TimescaleDB for time-series data (charging sessions, telemetry, etc.)
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: ev-saas-timescaledb
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: evsaas
      POSTGRES_PASSWORD: evsaas_password
      POSTGRES_DB: evsaas_timeseries_db
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./infra/postgres/init/timescaledb:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - ev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evsaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Regular PostgreSQL for user data, auth, billing, etc.
  postgres:
    image: postgres:14-alpine
    container_name: ev-saas-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: evsaas
      POSTGRES_PASSWORD: evsaas_password
      POSTGRES_DB: evsaas_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init/postgres:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - ev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evsaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  ## Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ev-saas-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - ev-network
    command: redis-server --save 60 1 --loglevel warning

  ## Service Discovery
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: ev-saas-eureka
    ports:
      - "8761:8761"
    networks:
      - ev-network

    # Kafka and Zookeeper for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ev-saas-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ev-network

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ev-saas-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ev-network

  ## API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ev-saas-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false

  ## Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        - MAVEN_ARGS=clean package -DskipTests
    container_name: ev-saas-auth
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/evsaas_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8081
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080/auth
      - KEYCLOAK_REALM=evsaas
      - KEYCLOAK_RESOURCE=evsaas-client
      - KEYCLOAK_SSL_REQUIRED=external
      - KEYCLOAK_USE_RESOURCE_ROLE_MAPPINGS=true
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false

  ## User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: ev-saas-user
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/evsaas_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8082
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false

  ## Billing Service
  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    container_name: ev-saas-billing
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/evsaas_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - TIMESCALE_DATASOURCE_URL=jdbc:postgresql://timescaledb:5432/evsaas_timeseries_db
      - TIMESCALE_DATASOURCE_USERNAME=evsaas
      - TIMESCALE_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8083
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false
      
  ## Station Service (uses TimescaleDB for time-series data)
  station-service:
    build:
      context: ./station-service
      dockerfile: Dockerfile
      args:
        - MAVEN_ARGS=clean package -DskipTests
        - SPRING_PROFILES_ACTIVE=local
    container_name: ev-saas-station
    ports:
      - "8084:8084"
    depends_on:
      timescaledb:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://timescaledb:5432/evsaas_timeseries_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8084
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false
      
  ## Scheduler Service
  scheduler-service:
    build:
      context: ./scheduler-service
      dockerfile: Dockerfile
    container_name: ev-saas-scheduler
    ports:
      - "8086:8086"
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/evsaas_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8086
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false
      
  ## Notification Service with Kafka
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
      args:
        - MAVEN_ARGS=clean package -DskipTests
        - SPRING_PROFILES_ACTIVE=local
    container_name: ev-saas-notification
    ports:
      - "8087:8087"
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/evsaas_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8087
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      
  ## Smart Charging Service
  smart-charging:
    build:
      context: ./smart-charging
      dockerfile: Dockerfile
    container_name: ev-saas-smart-charging
    ports:
      - "8085:8085"
    depends_on:
      timescaledb:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://timescaledb:5432/evsaas_timeseries_db
      - SPRING_DATASOURCE_USERNAME=evsaas
      - SPRING_DATASOURCE_PASSWORD=evsaas_password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SERVER_PORT=8085
      - SPRING_FLYWAY_ENABLED=false
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_SCHEMA_VALIDATION_ENABLED=false
      - SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED=false
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

volumes:
  postgres_data:
  timescaledb_data:
  redis_data:

networks:
  ev-network:
    driver: bridge 