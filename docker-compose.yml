version: '3.8'

services:
  ## Database
  timescaledb-postgis:
    image: timescale/timescaledb-postgis:latest-pg13
    container_name: ev-saas-postgres
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: evsaas
      POSTGRES_PASSWORD: evsaas_password
      POSTGRES_DB: evsaas_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - ev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evsaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  ## Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ev-saas-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - ev-network
    command: redis-server --save 60 1 --loglevel warning

  ## Service Discovery
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: ev-saas-eureka
    ports:
      - "8761:8761"
    networks:
      - ev-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

    # Kafka and Zookeeper for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: appointment-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ev-network

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: appointment-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - ev-network

  ## API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ev-saas-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - ev-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/

volumes:
  postgres_data:
  redis_data:

networks:
  ev-network:
    driver: bridge 